# Usage examples:
#
#   docker compose up -d
#   docker compose exec mysql mysql -u test -ptest test -e 'SELECT * FROM categories'
#   docker compose exec postgres psql -U test -c 'SELECT * FROM categories'
#
version: '3'

services:
  mysql:
    # https://hub.docker.com/_/mysql
    image: mysql:5.7.20
    user: mysql:mysql
    environment:
      - MYSQL_ROOT_PASSWORD=secret
      - MYSQL_USER=test
      - MYSQL_PASSWORD=test
      - MYSQL_DATABASE=test
    volumes:
      - ./categories.mysql.sql:/docker-entrypoint-initdb.d/categories.sql
    healthcheck:
      # Specifying "MYSQL_PWD" variable suppresses "Warning: Using a password on the command line interface can be insecure"
      # Attention: MYSQL_PWD is deprecated as of MySQL 8.0; expect it to be removed in a future version of MySQL
      # Note: double dollar sign protects variables from docker compose interpolation
      test: "MYSQL_PWD=$$MYSQL_PASSWORD mysql --user=$$MYSQL_USER --silent --execute 'SELECT \"OK\" AS result'"
      interval: 1s
      timeout: 5s
      retries: 10
      start_period: 1s

  postgres:
    # https://hub.docker.com/_/postgres
    image: postgres:12-bookworm
    environment:
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=test
      - POSTGRES_DB=test
    volumes:
      - ./categories.postgres.sql:/docker-entrypoint-initdb.d/categories.sql
    healthcheck:
      # Note: double dollar sign protects variables from docker compose interpolation
      test: "pg_isready --user $$POSTGRES_USER --quiet --timeout 0"
      interval: 1s
      timeout: 5s
      retries: 10
      start_period: 1s

  express-js:
    build: ../examples/js/express/mysql
    environment:
      - DB_NAME=test
      - DB_USER=test
      - DB_PASSWORD=test
      - DB_HOST=mysql # defaults to localhost
      - PORT=3010     # defaults to 3000
    ports:
      - '3010:3010'
    depends_on:
      mysql:
        condition: service_healthy

  express-ts:
    build: ../examples/ts/express/mysql
    environment:
      - DB_NAME=test
      - DB_USER=test
      - DB_PASSWORD=test
      - DB_HOST=mysql # defaults to localhost
      - PORT=3020     # defaults to 3000
    ports:
      - '3020:3020'
    depends_on:
      mysql:
        condition: service_healthy

  chi:
    build: ../examples/go/chi/mysql
    environment:
      - DB_NAME=test
      - DB_USER=test
      - DB_PASSWORD=test
      - DB_HOST=mysql # defaults to localhost
      - PORT=3030     # defaults to 3000
    ports:
      - '3030:3030'
    depends_on:
      mysql:
        condition: service_healthy

  fastapi:
    build: ../examples/python/fastapi/postgres
    environment:
      - DB_NAME=test
      - DB_USER=test
      - DB_PASSWORD=test
      - DB_HOST=postgres # defaults to localhost
      - PORT=4040        # defaults to 3000
    ports:
      - '4040:8000'
    depends_on:
      postgres:
        condition: service_healthy
